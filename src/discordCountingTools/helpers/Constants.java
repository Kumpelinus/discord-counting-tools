package discordCountingTools.helpers;

import java.util.HashMap;

import discordCountingTools.helpers.NamedValue;
import discordCountingTools.helpers.NamedValueList;

final public class Constants {
	private Constants() {
		// Prevents creating instances.
	}

	/*
	 * Symbols are described in the following order:
	 * TEXT - REGULAR - MATHEMATICAL - SUBSCRIPT - SUPERSCRIPT
	 * ROMAN - ITALIC
	 * LIGHT - BOLD - DOUBLE
	 * UPPERCASE - LOWERCASE - MIXEDCASE
	 * SANS - SERIF
	 * 
	 * For symbols that consist of only regular ASCII characters,
	 * only TEXT and the case are given.
	 * 
	 * Symbols are assumed to be REGULAR, if Unicode does not
	 * call them MATHEMATICAL.
	 * 
	 * DOUBLE refers to letters written double-struck, also
	 * called "blackboard bold".
	 * 
	 * MIXEDCASE refers to Unicode characters described as "symbols".
	 */

	public static NamedValueList PI = new NamedValueList("pi", Math.PI, new HashMap<String, NamedValue>() {
		{
			put("TEXT UPPERCASE", new NamedValue("PI", Math.PI));
			put("TEXT LOWERCASE", new NamedValue("pi", Math.PI));
			put("TEXT MIXEDCASE", new NamedValue("Pi", Math.PI));
			put("REGULAR ROMAN LIGHT UPPERCASE SERIF", new NamedValue("Œ†", Math.PI));
			put("REGULAR ROMAN LIGHT LOWERCASE SERIF", new NamedValue("œÄ", Math.PI));
			put("REGULAR ROMAN LIGHT MIXEDCASE SERIF", new NamedValue("œñ", Math.PI));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SERIF", new NamedValue("ùö∑", Math.PI));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SERIF", new NamedValue("ùõë", Math.PI));
			put("MATHEMATICAL ROMAN BOLD MIXEDCASE SERIF", new NamedValue("ùõ°", Math.PI));
			put("MATHEMATICAL ITALIC LIGHT UPPERCASE SERIF", new NamedValue("ùõ±", Math.PI));
			put("MATHEMATICAL ITALIC LIGHT LOWERCASE SERIF", new NamedValue("ùúã", Math.PI));
			put("MATHEMATICAL ITALIC LIGHT MIXEDCASE SERIF", new NamedValue("ùúõ", Math.PI));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SERIF", new NamedValue("ùú´", Math.PI));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SERIF", new NamedValue("ùùÖ", Math.PI));
			put("MATHEMATICAL ITALIC BOLD MIXEDCASE SERIF", new NamedValue("ùùï", Math.PI));
			put("MATHEMATICAL ROMAN DOUBLE UPPERCASE SANS", new NamedValue("‚Ñø", Math.PI));
			put("MATHEMATICAL ROMAN DOUBLE LOWERCASE SANS", new NamedValue("‚Ñº", Math.PI));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SANS", new NamedValue("ùù•", Math.PI));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SANS", new NamedValue("ùùø", Math.PI));
			put("MATHEMATICAL ROMAN BOLD MIXEDCASE SANS", new NamedValue("ùûè", Math.PI));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SANS", new NamedValue("ùûü", Math.PI));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SANS", new NamedValue("ùûπ", Math.PI));
			put("MATHEMATICAL ITALIC BOLD MIXEDCASE SANS", new NamedValue("ùüâ", Math.PI));
		}
	});

	public static NamedValueList TAU = new NamedValueList("tau", Math.TAU, new HashMap<String, NamedValue>() {
		{
			put("TEXT UPPERCASE", new NamedValue("TAU", Math.TAU));
			put("TEXT LOWERCASE", new NamedValue("tau", Math.TAU));
			put("TEXT MIXEDCASE", new NamedValue("Tau", Math.TAU));
			put("REGULAR ROMAN LIGHT UPPERCASE SERIF", new NamedValue("Œ§", Math.TAU));
			put("REGULAR ROMAN LIGHT LOWERCASE SERIF", new NamedValue("œÑ", Math.TAU));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SERIF", new NamedValue("ùöª", Math.TAU));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SERIF", new NamedValue("ùõï", Math.TAU));
			put("MATHEMATICAL ITALIC LIGHT UPPERCASE SERIF", new NamedValue("ùõµ", Math.TAU));
			put("MATHEMATICAL ITALIC LIGHT LOWERCASE SERIF", new NamedValue("ùúè", Math.TAU));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SERIF", new NamedValue("ùúØ", Math.TAU));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SERIF", new NamedValue("ùùâ", Math.TAU));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SANS", new NamedValue("ùù©", Math.TAU));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SANS", new NamedValue("ùûÉ", Math.TAU));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SANS", new NamedValue("ùû£", Math.TAU));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SANS", new NamedValue("ùûΩ", Math.TAU));
		}
	});

	public static NamedValueList GAMMA = new NamedValueList("Œ≥", 0.577215664901532, new HashMap<String, NamedValue>() {
		{
			put("REGULAR ROMAN LIGHT UPPERCASE SERIF", new NamedValue("Œì", 0.577215664901532));
			put("REGULAR ROMAN LIGHT LOWERCASE SERIF", new NamedValue("Œ≥", 0.577215664901532));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SERIF", new NamedValue("ùö™", 0.577215664901532));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SERIF", new NamedValue("ùõÑ", 0.577215664901532));
			put("MATHEMATICAL ITALIC LIGHT UPPERCASE SERIF", new NamedValue("ùõ§", 0.577215664901532));
			put("MATHEMATICAL ITALIC LIGHT LOWERCASE SERIF", new NamedValue("ùõæ", 0.577215664901532));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SERIF", new NamedValue("ùúû", 0.577215664901532));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SERIF", new NamedValue("ùú∏", 0.577215664901532));
			put("REGULAR ROMAN DOUBLE UPPERCASE SANS", new NamedValue("‚Ñæ", 0.577215664901532));
			put("REGULAR ROMAN DOUBLE LOWERCASE SANS", new NamedValue("‚ÑΩ", 0.577215664901532));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SANS", new NamedValue("ùùò", 0.577215664901532));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SANS", new NamedValue("ùù≤", 0.577215664901532));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SANS", new NamedValue("ùûí", 0.577215664901532));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SANS", new NamedValue("ùû¨", 0.577215664901532));
			put("SUBSCRIPT ROMAN LIGHT LOWERCASE SANS", new NamedValue("·µß", 0.577215664901532));
		}
	});

	public static NamedValueList PHI = new NamedValueList("phi", 1.618033988749895, new HashMap<String, NamedValue>() {
		{
			put("TEXT UPPERCASE", new NamedValue("PHI", 1.618033988749895));
			put("TEXT LOWERCASE", new NamedValue("phi", 1.618033988749895));
			put("TEXT MIXEDCASE", new NamedValue("Phi", 1.618033988749895));
			put("REGULAR ROMAN LIGHT UPPERCASE SERIF", new NamedValue("Œ¶", 1.618033988749895));
			put("MATHEMATICAL ITALIC BOLD MIXEDCASE SERIF", new NamedValue("ùùì", 1.618033988749895));
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SANS", new NamedValue("ùù´", 1.618033988749895));
			put("REGULAR ROMAN LIGHT LOWERCASE SERIF", new NamedValue("œÜ", 1.618033988749895)); // these two characters
																								// are not identical,
			put("REGULAR ROMAN LIGHT MIXEDCASE SERIF", new NamedValue("œï", 1.618033988749895)); // despite many fonts
																								// showing them as such
			put("MATHEMATICAL ROMAN BOLD UPPERCASE SERIF", new NamedValue("ùöΩ", 1.618033988749895));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SERIF", new NamedValue("ùõó", 1.618033988749895));
			put("MATHEMATICAL ROMAN BOLD MIXEDCASE SERIF", new NamedValue("ùõü", 1.618033988749895));
			put("MATHEMATICAL ITALIC LIGHT UPPERCASE SERIF", new NamedValue("ùõ∑", 1.618033988749895));
			put("MATHEMATICAL ITALIC LIGHT LOWERCASE SERIF", new NamedValue("ùúë", 1.618033988749895));
			put("MATHEMATICAL ITALIC LIGHT MIXEDCASE SERIF", new NamedValue("ùúô", 1.618033988749895));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SERIF", new NamedValue("ùú±", 1.618033988749895));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SERIF", new NamedValue("ùùã", 1.618033988749895));
			put("MATHEMATICAL ROMAN BOLD LOWERCASE SANS", new NamedValue("ùûÖ", 1.618033988749895));
			put("MATHEMATICAL ROMAN BOLD MIXEDCASE SANS", new NamedValue("ùûç", 1.618033988749895));
			put("MATHEMATICAL ITALIC BOLD UPPERCASE SANS", new NamedValue("ùû•", 1.618033988749895));
			put("MATHEMATICAL ITALIC BOLD LOWERCASE SANS", new NamedValue("ùûø", 1.618033988749895));
			put("MATHEMATICAL ITALIC BOLD MIXEDCASE SANS", new NamedValue("ùüá", 1.618033988749895));
		}
	});

	public static NamedValueList E = new NamedValueList("e", Math.E, new HashMap<String, NamedValue>() {
		{
			put("TEXT UPPCASE", new NamedValue("E", Math.E));
			put("TEXT LOWERCASE", new NamedValue("e", Math.E));
			put("SUBSCRIPT ROMAN LIGHT LOWERCASE SANS", new NamedValue("‚Çë", Math.E));
		}
	});

	/*
	 * Digits are defined in the following way using tags.
	 * NAME => Signifies the name of the language/numerals
	 * LEFT-TO-RIGHT - RIGHT-TO-LEFT => Whether they are usually read left to right
	 * or right to left
	 * FULL - MISSING => Whether all digits are present or not
	 * WRONG => Signifies that the number is incorrectly implemented
	 * [0..9] => Signifies the digit
	 */

	public static NamedValueList DIGITS = new NamedValueList("0", 0, new HashMap<String, NamedValue>() {
		{
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 0", new NamedValue("0", 0));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 1", new NamedValue("1", 1));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 2", new NamedValue("2", 2));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 3", new NamedValue("3", 3));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 4", new NamedValue("4", 4));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 5", new NamedValue("5", 5));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 6", new NamedValue("6", 6));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 7", new NamedValue("7", 7));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 8", new NamedValue("8", 8));
			put("WESTERN-ARABIC LEFT-TO-RIGHT FULL 9", new NamedValue("9", 9));

			put("THAI LEFT-TO-RIGHT FULL 0", new NamedValue("‡πê", 0));
			put("THAI LEFT-TO-RIGHT FULL 1", new NamedValue("‡πë", 1));
			put("THAI LEFT-TO-RIGHT FULL 2", new NamedValue("‡πí", 2));
			put("THAI LEFT-TO-RIGHT FULL 3", new NamedValue("‡πì", 3));
			put("THAI LEFT-TO-RIGHT FULL 4", new NamedValue("‡πî", 4));
			put("THAI LEFT-TO-RIGHT FULL 5", new NamedValue("‡πï", 5));
			put("THAI LEFT-TO-RIGHT FULL 6", new NamedValue("‡πñ", 6));
			put("THAI LEFT-TO-RIGHT FULL 7", new NamedValue("‡πó", 7));
			put("THAI LEFT-TO-RIGHT FULL 8", new NamedValue("‡πò", 8));
			put("THAI LEFT-TO-RIGHT FULL 9", new NamedValue("‡πô", 9));

			put("KHMER LEFT-TO-RIGHT FULL 0", new NamedValue("·ü†", 0));
			put("KHMER LEFT-TO-RIGHT FULL 1", new NamedValue("·ü°", 1));
			put("KHMER LEFT-TO-RIGHT FULL 2", new NamedValue("·ü¢", 2));
			put("KHMER LEFT-TO-RIGHT FULL 3", new NamedValue("·ü£", 3));
			put("KHMER LEFT-TO-RIGHT FULL 4", new NamedValue("·ü§", 4));
			put("KHMER LEFT-TO-RIGHT FULL 5", new NamedValue("·ü•", 5));
			put("KHMER LEFT-TO-RIGHT FULL 6", new NamedValue("·ü¶", 6));
			put("KHMER LEFT-TO-RIGHT FULL 7", new NamedValue("·üß", 7));
			put("KHMER LEFT-TO-RIGHT FULL 8", new NamedValue("·ü®", 8));
			put("KHMER LEFT-TO-RIGHT FULL 9", new NamedValue("·ü©", 9));

			put("LAO LEFT-TO-RIGHT FULL 0", new NamedValue("‡ªê", 0));
			put("LAO LEFT-TO-RIGHT FULL 1", new NamedValue("‡ªë", 1));
			put("LAO LEFT-TO-RIGHT FULL 2", new NamedValue("‡ªí", 2));
			put("LAO LEFT-TO-RIGHT FULL 3", new NamedValue("‡ªì", 3));
			put("LAO LEFT-TO-RIGHT FULL 4", new NamedValue("‡ªî", 4));
			put("LAO LEFT-TO-RIGHT FULL 5", new NamedValue("‡ªï", 5));
			put("LAO LEFT-TO-RIGHT FULL 6", new NamedValue("‡ªñ", 6));
			put("LAO LEFT-TO-RIGHT FULL 7", new NamedValue("‡ªó", 7));
			put("LAO LEFT-TO-RIGHT FULL 8", new NamedValue("‡ªò", 8));
			put("LAO LEFT-TO-RIGHT FULL 9", new NamedValue("‡ªô", 9));

			put("DEVANAGARI LEFT-TO-RIGHT FULL 0", new NamedValue("‡•¶", 0));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 1", new NamedValue("‡•ß", 1));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 2", new NamedValue("‡•®", 2));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 3", new NamedValue("‡•©", 3));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 4", new NamedValue("‡•™", 4));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 5", new NamedValue("‡•´", 5));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 6", new NamedValue("‡•¨", 6));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 7", new NamedValue("‡•≠", 7));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 8", new NamedValue("‡•Æ", 8));
			put("DEVANAGARI LEFT-TO-RIGHT FULL 9", new NamedValue("‡•Ø", 9));

			put("GUJARATI LEFT-TO-RIGHT FULL 0", new NamedValue("‡´¶", 0));
			put("GUJARATI LEFT-TO-RIGHT FULL 1", new NamedValue("‡´ß", 1));
			put("GUJARATI LEFT-TO-RIGHT FULL 2", new NamedValue("‡´®", 2));
			put("GUJARATI LEFT-TO-RIGHT FULL 3", new NamedValue("‡´©", 3));
			put("GUJARATI LEFT-TO-RIGHT FULL 4", new NamedValue("‡´™", 4));
			put("GUJARATI LEFT-TO-RIGHT FULL 5", new NamedValue("‡´´", 5));
			put("GUJARATI LEFT-TO-RIGHT FULL 6", new NamedValue("‡´¨", 6));
			put("GUJARATI LEFT-TO-RIGHT FULL 7", new NamedValue("‡´≠", 7));
			put("GUJARATI LEFT-TO-RIGHT FULL 8", new NamedValue("‡´Æ", 8));
			put("GUJARATI LEFT-TO-RIGHT FULL 9", new NamedValue("‡´Ø", 9));

			put("KANNADA LEFT-TO-RIGHT FULL 0", new NamedValue("‡≥¶", 0));
			put("KANNADA LEFT-TO-RIGHT FULL 1", new NamedValue("‡≥ß", 1));
			put("KANNADA LEFT-TO-RIGHT FULL 2", new NamedValue("‡≥®", 2));
			put("KANNADA LEFT-TO-RIGHT FULL 3", new NamedValue("‡≥©", 3));
			put("KANNADA LEFT-TO-RIGHT FULL 4", new NamedValue("‡≥™", 4));
			put("KANNADA LEFT-TO-RIGHT FULL 5", new NamedValue("‡≥´", 5));
			put("KANNADA LEFT-TO-RIGHT FULL 6", new NamedValue("‡≥¨", 6));
			put("KANNADA LEFT-TO-RIGHT FULL 7", new NamedValue("‡≥≠", 7));
			put("KANNADA LEFT-TO-RIGHT FULL 8", new NamedValue("‡≥Æ", 8));
			put("KANNADA LEFT-TO-RIGHT FULL 9", new NamedValue("‡≥Ø", 9));

			put("TAMIL LEFT-TO-RIGHT FULL 0", new NamedValue("‡Ø¶", 0));
			put("TAMIL LEFT-TO-RIGHT FULL 1", new NamedValue("‡Øß", 1));
			put("TAMIL LEFT-TO-RIGHT FULL 2", new NamedValue("‡Ø®", 2));
			put("TAMIL LEFT-TO-RIGHT FULL 3", new NamedValue("‡Ø©", 3));
			put("TAMIL LEFT-TO-RIGHT FULL 4", new NamedValue("‡Ø™", 4));
			put("TAMIL LEFT-TO-RIGHT FULL 5", new NamedValue("‡Ø´", 5));
			put("TAMIL LEFT-TO-RIGHT FULL 6", new NamedValue("‡Ø¨", 6));
			put("TAMIL LEFT-TO-RIGHT FULL 7", new NamedValue("‡Ø≠", 7));
			put("TAMIL LEFT-TO-RIGHT FULL 8", new NamedValue("‡ØÆ", 8));
			put("TAMIL LEFT-TO-RIGHT FULL 9", new NamedValue("‡ØØ", 9));

			put("TELUGU LEFT-TO-RIGHT FULL 0", new NamedValue("‡±¶", 0));
			put("TELUGU LEFT-TO-RIGHT FULL 1", new NamedValue("‡±ß", 1));
			put("TELUGU LEFT-TO-RIGHT FULL 2", new NamedValue("‡±®", 2));
			put("TELUGU LEFT-TO-RIGHT FULL 3", new NamedValue("‡±©", 3));
			put("TELUGU LEFT-TO-RIGHT FULL 4", new NamedValue("‡±™", 4));
			put("TELUGU LEFT-TO-RIGHT FULL 5", new NamedValue("‡±´", 5));
			put("TELUGU LEFT-TO-RIGHT FULL 6", new NamedValue("‡±¨", 6));
			put("TELUGU LEFT-TO-RIGHT FULL 7", new NamedValue("‡±≠", 7));
			put("TELUGU LEFT-TO-RIGHT FULL 8", new NamedValue("‡±Æ", 8));
			put("TELUGU LEFT-TO-RIGHT FULL 9", new NamedValue("‡±Ø", 9));

			put("TIBETAN LEFT-TO-RIGHT FULL 0", new NamedValue("‡º†", 0));
			put("TIBETAN LEFT-TO-RIGHT FULL 1", new NamedValue("‡º°", 1));
			put("TIBETAN LEFT-TO-RIGHT FULL 2", new NamedValue("‡º¢", 2));
			put("TIBETAN LEFT-TO-RIGHT FULL 3", new NamedValue("‡º£", 3));
			put("TIBETAN LEFT-TO-RIGHT FULL 4", new NamedValue("‡º§", 4));
			put("TIBETAN LEFT-TO-RIGHT FULL 5", new NamedValue("‡º•", 5));
			put("TIBETAN LEFT-TO-RIGHT FULL 6", new NamedValue("‡º¶", 6));
			put("TIBETAN LEFT-TO-RIGHT FULL 7", new NamedValue("‡ºß", 7));
			put("TIBETAN LEFT-TO-RIGHT FULL 8", new NamedValue("‡º®", 8));
			put("TIBETAN LEFT-TO-RIGHT FULL 9", new NamedValue("‡º©", 9));

			put("URDU RIGHT-TO-LEFT FULL 0", new NamedValue("€∞", 0));
			put("URDU RIGHT-TO-LEFT FULL 1", new NamedValue("€±", 1));
			put("URDU RIGHT-TO-LEFT FULL 2", new NamedValue("€≤", 2));
			put("URDU RIGHT-TO-LEFT FULL 3", new NamedValue("€≥", 3));
			put("URDU RIGHT-TO-LEFT FULL 4", new NamedValue("€¥", 4));
			put("URDU RIGHT-TO-LEFT FULL 5", new NamedValue("€µ", 5));
			put("URDU RIGHT-TO-LEFT FULL 6", new NamedValue("€∂", 6));
			put("URDU RIGHT-TO-LEFT FULL 7", new NamedValue("€∑", 7));
			put("URDU RIGHT-TO-LEFT FULL 8", new NamedValue("€∏", 8));
			put("URDU RIGHT-TO-LEFT FULL 9", new NamedValue("€π", 9));

			put("KHMER LEFT-TO-RIGHT FULL 0", new NamedValue("·ü†", 0));
			put("KHMER LEFT-TO-RIGHT FULL 1", new NamedValue("·ü°", 1));
			put("KHMER LEFT-TO-RIGHT FULL 2", new NamedValue("·ü¢", 2));
			put("KHMER LEFT-TO-RIGHT FULL 3", new NamedValue("·ü£", 3));
			put("KHMER LEFT-TO-RIGHT FULL 4", new NamedValue("·ü§", 4));
			put("KHMER LEFT-TO-RIGHT FULL 5", new NamedValue("·ü•", 5));
			put("KHMER LEFT-TO-RIGHT FULL 6", new NamedValue("·ü¶", 6));
			put("KHMER LEFT-TO-RIGHT FULL 7", new NamedValue("·üß", 7));
			put("KHMER LEFT-TO-RIGHT FULL 8", new NamedValue("·ü®", 8));
			put("KHMER LEFT-TO-RIGHT FULL 9", new NamedValue("·ü©", 9));

			put("BURMESE LEFT-TO-RIGHT FULL 0", new NamedValue("·ÅÄ", 0));
			put("BURMESE LEFT-TO-RIGHT FULL 1", new NamedValue("·ÅÅ", 1));
			put("BURMESE LEFT-TO-RIGHT FULL 2", new NamedValue("·ÅÇ", 2));
			put("BURMESE LEFT-TO-RIGHT FULL 3", new NamedValue("·ÅÉ", 3));
			put("BURMESE LEFT-TO-RIGHT FULL 4", new NamedValue("·ÅÑ", 4));
			put("BURMESE LEFT-TO-RIGHT FULL 5", new NamedValue("·ÅÖ", 5));
			put("BURMESE LEFT-TO-RIGHT FULL 6", new NamedValue("·ÅÜ", 6));
			put("BURMESE LEFT-TO-RIGHT FULL 7", new NamedValue("·Åá", 7));
			put("BURMESE LEFT-TO-RIGHT FULL 8", new NamedValue("·Åà", 8));
			put("BURMESE LEFT-TO-RIGHT FULL 9", new NamedValue("·Åâ", 9));

			put("SINHALA LEFT-TO-RIGHT FULL 0", new NamedValue("‡∑¶", 0));
			put("SINHALA LEFT-TO-RIGHT FULL 1", new NamedValue("‡∑ß", 1));
			put("SINHALA LEFT-TO-RIGHT FULL 2", new NamedValue("‡∑®", 2));
			put("SINHALA LEFT-TO-RIGHT FULL 3", new NamedValue("‡∑©", 3));
			put("SINHALA LEFT-TO-RIGHT FULL 4", new NamedValue("‡∑™", 4));
			put("SINHALA LEFT-TO-RIGHT FULL 5", new NamedValue("‡∑´", 5));
			put("SINHALA LEFT-TO-RIGHT FULL 6", new NamedValue("‡∑¨", 6));
			put("SINHALA LEFT-TO-RIGHT FULL 7", new NamedValue("‡∑≠", 7));
			put("SINHALA LEFT-TO-RIGHT FULL 8", new NamedValue("‡∑Æ", 8));
			put("SINHALA LEFT-TO-RIGHT FULL 9", new NamedValue("‡∑Ø", 9));

			put("VAI LEFT-TO-RIGHT FULL 0", new NamedValue("Íò†", 0));
			put("VAI LEFT-TO-RIGHT FULL 1", new NamedValue("Íò°", 1));
			put("VAI LEFT-TO-RIGHT FULL 2", new NamedValue("Íò¢", 2));
			put("VAI LEFT-TO-RIGHT FULL 3", new NamedValue("Íò£", 3));
			put("VAI LEFT-TO-RIGHT FULL 4", new NamedValue("Íò§", 4));
			put("VAI LEFT-TO-RIGHT FULL 5", new NamedValue("Íò•", 5));
			put("VAI LEFT-TO-RIGHT FULL 6", new NamedValue("Íò¶", 6));
			put("VAI LEFT-TO-RIGHT FULL 7", new NamedValue("Íòß", 7));
			put("VAI LEFT-TO-RIGHT FULL 8", new NamedValue("Íò®", 8));
			put("VAI LEFT-TO-RIGHT FULL 9", new NamedValue("Íò©", 9));

			put("OSMANYA LEFT-TO-RIGHT FULL 0", new NamedValue("êí†", 0));
			put("OSMANYA LEFT-TO-RIGHT FULL 1", new NamedValue("êí°", 1));
			put("OSMANYA LEFT-TO-RIGHT FULL 2", new NamedValue("êí¢", 2));
			put("OSMANYA LEFT-TO-RIGHT FULL 3", new NamedValue("êí£", 3));
			put("OSMANYA LEFT-TO-RIGHT FULL 4", new NamedValue("êí§", 4));
			put("OSMANYA LEFT-TO-RIGHT FULL 5", new NamedValue("êí•", 5));
			put("OSMANYA LEFT-TO-RIGHT FULL 6", new NamedValue("êí¶", 6));
			put("OSMANYA LEFT-TO-RIGHT FULL 7", new NamedValue("êíß", 7));
			put("OSMANYA LEFT-TO-RIGHT FULL 8", new NamedValue("êí®", 8));
			put("OSMANYA LEFT-TO-RIGHT FULL 9", new NamedValue("êí©", 9));

			put("HMONG LEFT-TO-RIGHT FULL 0", new NamedValue("ñ≠ê", 0));
			put("HMONG LEFT-TO-RIGHT FULL 1", new NamedValue("ñ≠ë", 1));
			put("HMONG LEFT-TO-RIGHT FULL 2", new NamedValue("ñ≠í", 2));
			put("HMONG LEFT-TO-RIGHT FULL 3", new NamedValue("ñ≠ì", 3));
			put("HMONG LEFT-TO-RIGHT FULL 4", new NamedValue("ñ≠î", 4));
			put("HMONG LEFT-TO-RIGHT FULL 5", new NamedValue("ñ≠ï", 5));
			put("HMONG LEFT-TO-RIGHT FULL 6", new NamedValue("ñ≠ñ", 6));
			put("HMONG LEFT-TO-RIGHT FULL 7", new NamedValue("ñ≠ó", 7));
			put("HMONG LEFT-TO-RIGHT FULL 8", new NamedValue("ñ≠ò", 8));
			put("HMONG LEFT-TO-RIGHT FULL 9", new NamedValue("ñ≠ô", 9));

			put("SUNDANESE LEFT-TO-RIGHT FULL 0", new NamedValue("·Æ∞", 0));
			put("SUNDANESE LEFT-TO-RIGHT FULL 1", new NamedValue("·Æ±", 1));
			put("SUNDANESE LEFT-TO-RIGHT FULL 2", new NamedValue("·Æ≤", 2));
			put("SUNDANESE LEFT-TO-RIGHT FULL 3", new NamedValue("·Æ≥", 3));
			put("SUNDANESE LEFT-TO-RIGHT FULL 4", new NamedValue("·Æ¥", 4));
			put("SUNDANESE LEFT-TO-RIGHT FULL 5", new NamedValue("·Æµ", 5));
			put("SUNDANESE LEFT-TO-RIGHT FULL 6", new NamedValue("·Æ∂", 6));
			put("SUNDANESE LEFT-TO-RIGHT FULL 7", new NamedValue("·Æ∑", 7));
			put("SUNDANESE LEFT-TO-RIGHT FULL 8", new NamedValue("·Æ∏", 8));
			put("SUNDANESE LEFT-TO-RIGHT FULL 9", new NamedValue("·Æπ", 9));

			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 0", new NamedValue("‡ß¶", 0));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 1", new NamedValue("‡ßß", 1));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 2", new NamedValue("‡ß®", 2));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 3", new NamedValue("‡ß©", 3));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING WRONG 8", new NamedValue("‡ß™", 8));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 5", new NamedValue("‡ß´", 5));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 6", new NamedValue("‡ß¨", 6));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING WRONG 9", new NamedValue("‡ß≠", 9));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 8", new NamedValue("‡ßÆ", 8));
			put("BENGALI-ASSAMESE LEFT-TO-RIGHT MISSING 9", new NamedValue("‡ßØ", 9));

			put("MALAYALAM LEFT-TO-RIGHT MISSING 0", new NamedValue("‡µ¶", 0));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 1", new NamedValue("‡µß", 1));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 2", new NamedValue("‡µ®", 2));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 3", new NamedValue("‡µ©", 3));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 4", new NamedValue("‡µ™", 4));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 5", new NamedValue("‡µ´", 5));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 6", new NamedValue("‡µ¨", 6));
			put("MALAYALAM LEFT-TO-RIGHT MISSING WRONG 9", new NamedValue("‡µ≠", 9));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 8", new NamedValue("‡µÆ", 8));
			put("MALAYALAM LEFT-TO-RIGHT MISSING 9", new NamedValue("‡µØ", 9));

			put("ODIA LEFT-TO-RIGHT MISSING 0", new NamedValue("‡≠¶", 0));
			put("ODIA LEFT-TO-RIGHT MISSING 1", new NamedValue("‡≠ß", 1));
			put("ODIA LEFT-TO-RIGHT MISSING WRONG 9", new NamedValue("‡≠®", 9));
			put("ODIA LEFT-TO-RIGHT MISSING 3", new NamedValue("‡≠©", 3));
			put("ODIA LEFT-TO-RIGHT MISSING 4", new NamedValue("‡≠™", 4));
			put("ODIA LEFT-TO-RIGHT MISSING 5", new NamedValue("‡≠´", 5));
			put("ODIA LEFT-TO-RIGHT MISSING 6", new NamedValue("‡≠¨", 6));
			put("ODIA LEFT-TO-RIGHT MISSING 7", new NamedValue("‡≠≠", 7));
			put("ODIA LEFT-TO-RIGHT MISSING 8", new NamedValue("‡≠Æ", 8));
			put("ODIA LEFT-TO-RIGHT MISSING 9", new NamedValue("‡≠Ø", 9));

			put("PUNJABI LEFT-TO-RIGHT MISSING 0", new NamedValue("‡©¶", 0));
			put("PUNJABI LEFT-TO-RIGHT MISSING WRONG 9", new NamedValue("‡©ß", 9));
			put("PUNJABI LEFT-TO-RIGHT MISSING 2", new NamedValue("‡©®", 2));
			put("PUNJABI LEFT-TO-RIGHT MISSING 3", new NamedValue("‡©©", 3));
			put("PUNJABI LEFT-TO-RIGHT MISSING WRONG 8", new NamedValue("‡©™", 8));
			put("PUNJABI LEFT-TO-RIGHT MISSING 5", new NamedValue("‡©´", 5));
			put("PUNJABI LEFT-TO-RIGHT MISSING 6", new NamedValue("‡©¨", 6));
			put("PUNJABI LEFT-TO-RIGHT MISSING 7", new NamedValue("‡©≠", 7));
			put("PUNJABI LEFT-TO-RIGHT MISSING 8", new NamedValue("‡©Æ", 8));
			put("PUNJABI LEFT-TO-RIGHT MISSING 9", new NamedValue("‡©Ø", 9));

			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 0", new NamedValue("Ÿ†", 0));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 1", new NamedValue("Ÿ°", 1));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 2", new NamedValue("Ÿ¢", 2));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 3", new NamedValue("Ÿ£", 3));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 4", new NamedValue("Ÿ§", 4));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 5", new NamedValue("Ÿ•", 5));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 6", new NamedValue("Ÿ¶", 6));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 7", new NamedValue("Ÿß", 7));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 8", new NamedValue("Ÿ®", 8));
			put("EASTERN-ARABIC RIGHT-TO-LEFT FULL 9", new NamedValue("Ÿ©", 9));

			put("NKO RIGHT-TO-LEFT MISSING 1", new NamedValue("ﬂÅ", 1));
			put("NKO RIGHT-TO-LEFT MISSING 2", new NamedValue("ﬂÇ", 2));
			put("NKO RIGHT-TO-LEFT MISSING 3", new NamedValue("ﬂÉ", 3));
			put("NKO RIGHT-TO-LEFT MISSING 4", new NamedValue("ﬂÑ", 4));
			put("NKO RIGHT-TO-LEFT MISSING 5", new NamedValue("ﬂÖ", 5));
			put("NKO RIGHT-TO-LEFT MISSNIG 6", new NamedValue("ﬂÜ", 6));
			put("NKO RIGHT-TO-LEFT MISSING 7", new NamedValue("ﬂá", 7));
			put("NKO RIGHT-TO-LEFT MISSING 8", new NamedValue("ﬂà", 8));
			put("NKO RIGHT-TO-LEFT MISSING 9", new NamedValue("ﬂâ", 9));

			put("ADLAM RIGHT-TO-LEFT FULL 0", new NamedValue("û•ê", 0));
			put("ADLAM RIGHT-TO-LEFT FULL 1", new NamedValue("û•ë", 1));
			put("ADLAM RIGHT-TO-LEFT FULL 2", new NamedValue("û•í", 2));
			put("ADLAM RIGHT-TO-LEFT FULL 3", new NamedValue("û•ì", 3));
			put("ADLAM RIGHT-TO-LEFT FULL 4", new NamedValue("û•î", 4));
			put("ADLAM RIGHT-TO-LEFT FULL 5", new NamedValue("û•ï", 5));
			put("ADLAM RIGHT-TO-LEFT FULL 6", new NamedValue("û•ñ", 6));
			put("ADLAM RIGHT-TO-LEFT FULL 7", new NamedValue("û•ó", 7));
			put("ADLAM RIGHT-TO-LEFT FULL 8", new NamedValue("û•ò", 8));
			put("ADLAM RIGHT-TO-LEFT FULL 9", new NamedValue("û•ô", 9));
		}
	});
}
